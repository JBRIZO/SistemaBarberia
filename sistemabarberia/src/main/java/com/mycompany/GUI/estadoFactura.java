/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.GUI;

import com.mycompany.sistemabarberia.JPACOntrollers.estadofacturaJpaController;
import com.mycompany.sistemabarberia.JTextFieldLimit;
import com.mycompany.sistemabarberia.Validaciones;
import com.mycompany.sistemabarberia.estadofactura;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.FileHandler;
import java.util.logging.SimpleFormatter;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kesil
 */
public class estadoFactura extends javax.swing.JFrame {
    
    private static JTable tabla;
    private EntityManagerFactory emf = Persistence.createEntityManagerFactory("servidorbd");
    
    
    private estadofacturaJpaController estadofacturaDAO = new estadofacturaJpaController(emf);
    private Validaciones validar = new Validaciones();
    private ImageIcon imagen;
    private Icon icono;
    Border redBorder = BorderFactory.createLineBorder(Color.RED, 1);
    Border greenBorder = BorderFactory.createLineBorder(Color.GREEN, 1);
    Border defaultBorder = new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true);

    


    /**
     * Creates new form nuevoestadofactura
     * @param tabla
     */
    public estadoFactura(JTable tabla) {
        initComponents();
        this.setLocationRelativeTo(null);
        formatoInvalido.setVisible(false);
        Image icon = new ImageIcon(getClass().getResource("/Imagenes/logoBarberia.jpeg")).getImage();
        setIconImage(icon);
        this.insertarImagen(this.logo,"/Imagenes/logoBarberia.png");
        this.tabla = tabla;
        Reiniciar();  
    }
    
    public void Reiniciar()
    {
        List<estadofactura> estadofacturaEnBd = estadofacturaDAO.findestadofacturaEntities();
        if (estadofacturaEnBd.isEmpty())
        {
            idestado.setText("  ID Estado de Factura: 1");
        }else
        {
            idestado.setText("  ID Estado de Factura: " + Integer.toString(estadofacturaEnBd.get(estadofacturaEnBd.size()-1).getIdestado()+1));
        } 
        
        NombreEstado.setText("Estado Factura");
        NombreEstado.setBorder(defaultBorder);
        formatoInvalido.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        tituloPantalla = new javax.swing.JLabel();
        botonAceptar = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        idestado = new javax.swing.JTextField();
        formatoInvalido = new javax.swing.JLabel();
        NombreEstado = new javax.swing.JTextField();
        salir = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(20, 17, 17));
        jPanel1.setMaximumSize(new java.awt.Dimension(334, 279));

        tituloPantalla.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        tituloPantalla.setForeground(new java.awt.Color(255, 255, 255));
        tituloPantalla.setText("NUEVO ESTADO DE FACTURA");

        botonAceptar.setBackground(new java.awt.Color(189, 158, 76));
        botonAceptar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        botonAceptar.setText("ACEPTAR");
        botonAceptar.setRequestFocusEnabled(false);
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        logo.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(55, 53, 53));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.setMaximumSize(new java.awt.Dimension(421, 280));
        jPanel2.setMinimumSize(new java.awt.Dimension(421, 280));

        jPanel3.setBackground(new java.awt.Color(55, 53, 53));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel3.setMaximumSize(new java.awt.Dimension(358, 219));
        jPanel3.setMinimumSize(new java.awt.Dimension(358, 219));

        idestado.setEditable(false);
        idestado.setBackground(new java.awt.Color(30, 33, 34));
        idestado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idestado.setForeground(new java.awt.Color(255, 255, 255));
        idestado.setText("  ID Estado");
        idestado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        idestado.setSelectionColor(new java.awt.Color(55, 53, 53));
        idestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idestadoActionPerformed(evt);
            }
        });

        formatoInvalido.setForeground(new java.awt.Color(255, 255, 255));
        formatoInvalido.setText("Formato no valido.");

        NombreEstado.setBackground(new java.awt.Color(30, 33, 34));
        NombreEstado.setDocument(new JTextFieldLimit(25));
        NombreEstado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NombreEstado.setForeground(new java.awt.Color(255, 255, 255));
        NombreEstado.setText("  Nuevo Estado de Factura");
        NombreEstado.setToolTipText("Ingrese un nuevo Estado de Factura.");
        NombreEstado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        NombreEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NombreEstadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NombreEstadoFocusLost(evt);
            }
        });
        NombreEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreEstadoActionPerformed(evt);
            }
        });
        NombreEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NombreEstadoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formatoInvalido)
                    .addComponent(NombreEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idestado, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 42, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(idestado, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(formatoInvalido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NombreEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/x.png"))); // NOI18N
        salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(325, 325, 325))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(tituloPantalla)
                                .addGap(18, 18, 18)))
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tituloPantalla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(59, 59, 59)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        try{
            if(NombreEstado.getText().equals("Estado Factura"))
        {
            JOptionPane.showMessageDialog(this,"Debes ingresar un estado de factura","Ingresa un nombre de estado",JOptionPane.ERROR_MESSAGE);
            NombreEstado.setBorder(redBorder);
            return;
        }
        List<estadofactura> estadofacturaEnBd = estadofacturaDAO.findestadofacturaEntities();
        estadofactura estadoFacturaNuevo = new estadofactura();
        estadoFacturaNuevo.setNombreEstado(NombreEstado.getText());
        estadoFacturaNuevo.setActivo(true);

       validacionCampos();
       for(int i=0; i < estadofacturaEnBd.size();i++)
        {
            if(NombreEstado.getText().equalsIgnoreCase(estadofacturaEnBd.get(i).getNombreEstado()))
            {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("Este estado de factura ya existe.");
            return;
            }
        }
        if(validacionCampos()){
            try {
            estadofacturaDAO.create(estadoFacturaNuevo);
            JOptionPane.showMessageDialog(null,"Operación Exitosa");
                    Reiniciar();
                    anadirEstado();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"No se pudo guardar, excepción: " + ex.getMessage());
        }
        }else{JOptionPane.showMessageDialog(null, "Por favor corrige los campos necesarios", "Error",JOptionPane.ERROR_MESSAGE);}
        }catch(Exception ex){
            log(ex);
        }
        
        
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void anadirEstado()
    {
        Query query = estadofacturaDAO.getEntityManager().createQuery("FROM estadofactura ORDER BY idestado DESC");
        query.setMaxResults(1);
        estadofactura nuevoEstado = (estadofactura) query.getSingleResult();
        DefaultTableModel modelo = (DefaultTableModel)tabla.getModel();
        String activo = nuevoEstado.isActivo()?"Sí":"No";
        tabla.setModel(modelo);
                    modelo.addRow(
                    new Object[]{
                        nuevoEstado.getIdestado(),
                        nuevoEstado.getNombreEstado(), 
                        activo
                    }
                );
    }
    
    private void idestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idestadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idestadoActionPerformed
//a;adir validaciones botonaceptar
    private void NombreEstadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NombreEstadoFocusLost
        try{
        validacionCampos();
        }catch(Exception ex){
            log(ex);
        }
    }//GEN-LAST:event_NombreEstadoFocusLost

    private void NombreEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreEstadoActionPerformed

    private void NombreEstadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NombreEstadoKeyTyped
        // TODO add your handling code he
    }//GEN-LAST:event_NombreEstadoKeyTyped

    private void NombreEstadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NombreEstadoFocusGained
        // TODO add your handling code here:
        NombreEstado.selectAll();
    }//GEN-LAST:event_NombreEstadoFocusGained

    private void salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMouseClicked
        // TODO add your handling code here:
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new atributosFactura().setVisible(true);
//            }
//        });
        try{
        emf.close();
        this.setVisible(false);
        this.dispose(); 
        estadofacturaDAO.close();
        }catch(Exception ex){
        log(ex);
        }
        
    }//GEN-LAST:event_salirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(estadoFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(estadoFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(estadoFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(estadoFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new estadoFactura(tabla).setVisible(true);
            }
        });
        
        
    }
    
    private void insertarImagen(JLabel lbl,String ruta)
    {
        this.imagen = new ImageIcon(getClass().getResource(ruta));
        this.icono = new ImageIcon(
                this.imagen.getImage().getScaledInstance(
                        lbl.getWidth(), 
                        lbl.getHeight(),
                        Image.SCALE_DEFAULT)
        );
        lbl.setIcon(this.icono);
        this.repaint();
    }
    
    private boolean validacionCampos()
    {
         if(NombreEstado.getText().equals(""))
        {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("Debes ingresar un dato.");
            return false;
        }
        if(NombreEstado.getText().matches("^.*\\d+.*$"))
        {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("Solo se permite texto en este campo.");
            return false;
        }
        if(!NombreEstado.getText().matches("^[A-Z]{1}[\\w\\s]+$"))
        {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("El estado de factura debe iniciar con mayúscula.");
            return false;
        }
         if(validar.validacionLetrasRepetidas(NombreEstado.getText()))
        {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("No puedes repetir tantas letras.");
            return false;
        }
        if(!validar.validacionCadenaPalabras(NombreEstado.getText()))
        {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("Esa no es una palabra válida.");
            return false;
        }
        if(!validar.validacionCantidadMinima(NombreEstado.getText(), 3))
        {
            NombreEstado.setBorder(redBorder);
            formatoInvalido.setVisible(true);
            formatoInvalido.setText("El estado de la factura debe ser de mínimo 3 letras.");
            return false;
        }
        NombreEstado.setBorder(greenBorder);
        formatoInvalido.setText("");
        return true;
        
    }
    
    private void log(Exception ex){
        FileHandler fh;                              
            java.util.logging.Logger logger = java.util.logging.Logger.getLogger("Log");  
            try {
                Timestamp timestamp = new Timestamp(System.currentTimeMillis());
                String ts = new SimpleDateFormat("dd MMMM yyyy HH.mm.ss").format(timestamp);
                fh = new FileHandler("../logs/"+ ts + " " + this.getClass().getName()+".txt" );
                logger.addHandler(fh);
                SimpleFormatter formatter = new SimpleFormatter();
                fh.setFormatter(formatter);
                logger.info(ex.getClass().toString() + " : " +ex.getMessage());
            } catch (SecurityException e) {  
                e.printStackTrace();  
            } catch (IOException e) {  
                e.printStackTrace();  
            } 
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField NombreEstado;
    private javax.swing.JButton botonAceptar;
    private javax.swing.JLabel formatoInvalido;
    javax.swing.JTextField idestado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel salir;
    private javax.swing.JLabel tituloPantalla;
    // End of variables declaration//GEN-END:variables
}
